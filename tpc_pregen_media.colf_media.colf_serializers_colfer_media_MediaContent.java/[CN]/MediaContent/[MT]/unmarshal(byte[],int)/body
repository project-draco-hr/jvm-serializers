{
  int i=offset;
  try {
    byte header=buf[i++];
    if (header == (byte)0) {
      int n=0;
      for (int shift=0; true; shift+=7) {
        byte b=buf[i++];
        n|=(b & 0x7f) << shift;
        if (shift == 28 || b >= 0)         break;
      }
      if (n > colferListMax)       throw new TypeConstraintException(format("colfer: field serializers/colfer/media.mediaContent.images length %d exceeds %d elements",n,colferListMax));
      Image[] a=new Image[n];
      for (int ai=0; ai < n; ai++) {
        Image o=new Image();
        i=o.unmarshal(buf,i);
        a[ai]=o;
      }
      this.images=a;
      header=buf[i++];
    }
    if (header == (byte)1) {
      this.media=new Media();
      i=this.media.unmarshal(buf,i);
      header=buf[i++];
    }
    if (header != (byte)0x7f)     throw new DataBindingException(format("colfer: unknown header at byte %d",i - 1),null);
  }
 catch (  IndexOutOfBoundsException e) {
    if (i - offset > colferSizeMax)     throw new TypeConstraintException(format("colfer: serial exceeds %d bytes",colferSizeMax));
    if (i >= buf.length)     throw new BufferUnderflowException();
    throw new RuntimeException("colfer: bug",e);
  }
  return i;
}
