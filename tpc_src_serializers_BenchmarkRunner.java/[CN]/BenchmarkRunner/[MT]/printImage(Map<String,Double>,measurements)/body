{
  StringBuilder valSb=new StringBuilder();
  String names="";
  double max=Double.MIN_NORMAL;
  for (  Map.Entry<String,Double> entry : map.entrySet()) {
    double value=entry.getValue();
    valSb.append((int)value).append(',');
    max=Math.max(max,entry.getValue());
    names=urlEncode(entry.getKey()) + '|' + names;
  }
  int headerSize=30;
  int maxPixels=300 * 1000;
  int width=700;
  int maxHeight=maxPixels / width;
  int barThickness=10;
  int barSpacing=10;
  int height;
  while (true) {
    height=headerSize + map.size() * (barThickness + barSpacing);
    if (height <= maxHeight)     break;
    barSpacing--;
    if (barSpacing == 1)     break;
    height=headerSize + map.size() * (barThickness + barSpacing);
    if (height <= maxHeight)     break;
    barThickness--;
    if (barThickness == 1)     break;
  }
  boolean truncated=false;
  if (height > maxHeight) {
    truncated=true;
    height=maxHeight;
  }
  double scale=max * 1.1;
  System.out.println("<img src='https://chart.googleapis.com/chart?chtt=" + urlEncode(m.displayName) + "&chf=c||lg||0||FFFFFF||1||76A4FB||0|bg||s||EFEFEF&chs="+ width+ "x"+ height+ "&chd=t:"+ valSb.toString().substring(0,valSb.length() - 1)+ "&chds=0,"+ scale+ "&chxt=y"+ "&chxl=0:|"+ names.substring(0,names.length() - 1)+ "&chm=N *f*,000000,0,-1,10&lklk&chdlp=t&chco=660000|660033|660066|660099|6600CC|6600FF|663300|663333|663366|663399|6633CC|6633FF|666600|666633|666666&cht=bhg&chbh="+ barThickness+ ",0,"+ barSpacing+ "&nonsense=aaa.png'/>");
  if (truncated) {
    System.err.println("WARNING: Not enough room to fit all bars in chart.");
  }
}
