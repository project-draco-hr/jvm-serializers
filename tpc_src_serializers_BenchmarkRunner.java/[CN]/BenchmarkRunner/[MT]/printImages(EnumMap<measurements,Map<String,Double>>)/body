{
  for (  measurements m : values.keySet()) {
    Map<String,Double> map=values.get(m);
    ArrayList<Map.Entry<String,Double>> list=new ArrayList<Map.Entry<String,Double>>(map.entrySet());
    Collections.sort(list,new Comparator<Map.Entry<String,Double>>(){
      public int compare(      Map.Entry<String,Double> o1,      Map.Entry<String,Double> o2){
        double diff=o1.getValue() - o2.getValue();
        return diff > 0 ? 1 : (diff < 0 ? -1 : 0);
      }
    }
);
    LinkedHashMap<String,Double> sortedMap=new LinkedHashMap<String,Double>();
    for (    Map.Entry<String,Double> entry : list) {
      if (!entry.getValue().isNaN()) {
        sortedMap.put(entry.getKey(),entry.getValue());
      }
    }
    if (!sortedMap.isEmpty())     printImage(sortedMap,m);
  }
}
