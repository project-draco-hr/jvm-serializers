{
  int i=offset;
  try {
    byte header=buf[i++];
    if (header == (byte)0) {
      int n=0;
      for (int shift=0; true; shift+=7) {
        byte b=buf[i++];
        n|=(b & 0x7f) << shift;
        if (shift == 28 || b >= 0)         break;
      }
      if (n > colferSizeMax)       throw new TypeConstraintException(format("colfer: field serializers/colfer/media.image.uri size %d exceeds %d UTF-8 bytes",n,colferSizeMax));
      this.uri=new String(buf,i,n,this._utf8);
      i+=n;
      header=buf[i++];
    }
    if (header == (byte)1) {
      int n=0;
      for (int shift=0; true; shift+=7) {
        byte b=buf[i++];
        n|=(b & 0x7f) << shift;
        if (shift == 28 || b >= 0)         break;
      }
      if (n > colferSizeMax)       throw new TypeConstraintException(format("colfer: field serializers/colfer/media.image.title size %d exceeds %d UTF-8 bytes",n,colferSizeMax));
      this.title=new String(buf,i,n,this._utf8);
      i+=n;
      header=buf[i++];
    }
    if (header == (byte)2) {
      int x=0;
      for (int shift=0; true; shift+=7) {
        byte b=buf[i++];
        x|=(b & 0x7f) << shift;
        if (shift == 28 || b >= 0)         break;
      }
      this.width=x;
      header=buf[i++];
    }
 else     if (header == (byte)(2 | 0x80)) {
      int x=0;
      for (int shift=0; true; shift+=7) {
        byte b=buf[i++];
        x|=(b & 0x7f) << shift;
        if (shift == 28 || b >= 0)         break;
      }
      this.width=-x;
      header=buf[i++];
    }
    if (header == (byte)3) {
      int x=0;
      for (int shift=0; true; shift+=7) {
        byte b=buf[i++];
        x|=(b & 0x7f) << shift;
        if (shift == 28 || b >= 0)         break;
      }
      this.height=x;
      header=buf[i++];
    }
 else     if (header == (byte)(3 | 0x80)) {
      int x=0;
      for (int shift=0; true; shift+=7) {
        byte b=buf[i++];
        x|=(b & 0x7f) << shift;
        if (shift == 28 || b >= 0)         break;
      }
      this.height=-x;
      header=buf[i++];
    }
    if (header == (byte)4) {
      this.small=true;
      header=buf[i++];
    }
    if (header == (byte)5) {
      this.large=true;
      header=buf[i++];
    }
    if (header != (byte)0x7f)     throw new DataBindingException(format("colfer: unknown header at byte %d",i - 1),null);
  }
 catch (  IndexOutOfBoundsException e) {
    if (i - offset > colferSizeMax)     throw new TypeConstraintException(format("colfer: serial exceeds %d bytes",colferSizeMax));
    if (i >= buf.length)     throw new BufferUnderflowException();
    throw new RuntimeException("colfer: bug",e);
  }
  return i;
}
