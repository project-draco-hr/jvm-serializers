{
switch (state) {
case READING_MEDIA_CONTENT:
case FINISHED_IMAGES:
    if ("media".equals(key)) {
      state=State.READING_MEDIA;
      return true;
    }
case FINISHED_MEDIA:
  if ("images".equals(key)) {
    state=State.READING_IMAGES;
    return true;
  }
throw new RuntimeException("unexpected state transition");
case READING_MEDIA:
if ("uri".equals(key)) {
state=State.READING_MEDIA_URI;
return true;
}
if ("title".equals(key)) {
state=State.READING_MEDIA_TITLE;
return true;
}
if ("width".equals(key)) {
state=State.READING_MEDIA_WIDTH;
return true;
}
if ("height".equals(key)) {
state=State.READING_MEDIA_HEIGHT;
return true;
}
if ("format".equals(key)) {
state=State.READING_MEDIA_FORMAT;
return true;
}
if ("duration".equals(key)) {
state=State.READING_MEDIA_DURATION;
return true;
}
if ("size".equals(key)) {
state=State.READING_MEDIA_SIZE;
return true;
}
if ("bitrate".equals(key)) {
state=State.READING_MEDIA_BITRATE;
return true;
}
if ("persons".equals(key)) {
state=State.READING_MEDIA_PERSONS;
return true;
}
if ("player".equals(key)) {
state=State.READING_MEDIA_PLAYER;
return true;
}
if ("copyright".equals(key)) {
state=State.READING_MEDIA_COPYRIGHT;
return true;
}
throw new RuntimeException("unexpected state transition");
case READING_IMAGE:
if ("uri".equals(key)) {
state=State.READING_IMAGE_URI;
return true;
}
if ("title".equals(key)) {
state=State.READING_IMAGE_TITLE;
return true;
}
if ("width".equals(key)) {
state=State.READING_IMAGE_WIDTH;
return true;
}
if ("height".equals(key)) {
state=State.READING_IMAGE_HEIGHT;
return true;
}
if ("size".equals(key)) {
state=State.READING_IMAGE_SIZE;
return true;
}
default :
throw new RuntimeException("unexpected state transition");
}
}
